---
import ComparisonSlider from "./ComparisonSlider.astro";
interface Props {
  r1tImages: string[];
  r1sImages: string[];
}
const { r1tImages, r1sImages } = Astro.props;
---

<script>
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import gsap from "gsap";
  gsap.registerPlugin(ScrollTrigger);
  const leftMillage = document.querySelector(".millage-left");
  const rightMillage = document.querySelector(".millage-right");
  let leftImages = document.querySelectorAll(".slider-item--left");
  let rightImages = document.querySelectorAll(".slider-item--right");

  let leftTimer: number | undefined;
  let rightTimer: number | undefined;
  (leftImages[0] as any).style.display = "block";
  (rightImages[0] as any).style.display = "block";

  let tl = gsap.timeline({
    defaults: { clearProps: true },
    onComplete: console.log,
  });
  let tl2 = gsap.timeline({ defaults: { clearProps: true } });
  leftMillage?.addEventListener("mouseenter", () => {
    gsap.matchMedia().add("(min-width: 769px)", () => {
      animateMillage("left");
    });
    leftTimer = setTimeout(() => {
      animateCars("left");
    }, 800);
  });
  rightMillage?.addEventListener("mouseenter", () => {
    gsap.matchMedia().add("(min-width: 769px)", () => {
      animateMillage("right");
    });
    rightTimer = setTimeout(() => {
      animateCars("right");
    }, 800);
  });
  leftMillage?.addEventListener("mouseleave", () => {
    clearTimeout(leftTimer);
    gsap.matchMedia().add("(min-width: 769px)", () => {
      animateMillage("reset");
    });
    tl.clear().revert();
    tl2.clear().revert();
  });

  rightMillage?.addEventListener("mouseleave", () => {
    clearTimeout(rightTimer);
    gsap.matchMedia().add("(min-width: 769px)", () => {
      animateMillage("reset");
    });
    tl.clear().revert();
    tl2.clear().revert();
  });

  function animateCars(location: "left" | "right") {
    if (location === "left") {
      leftImages.forEach((image, index) => {
        tl.fromTo(
          image,
          { display: "none" },
          {
            display: "block",
            duration: 0.8,
            onComplete: () => {},
          }
        );
      });
      tl.repeat(-1);
    } else {
      rightImages.forEach((image, index) => {
        tl2.fromTo(
          image,
          { display: "none" },
          {
            display: "block",
            duration: 0.8,
          }
        );
      });
      tl2.repeat(-1);
    }
  }

  function animateMillage(item: "left" | "right" | "reset") {
    gsap.to(".millage-left", {
      width: percentageMap[item][0],
      ease: "elastic.out(1,0.75)",
      duration: 1,
    });
    gsap.to(".millage-right", {
      width: percentageMap[item][1] || "48.5%",
      ease: "elastic.out(1,0.75)",
      duration: 1,
    });

    // Deprecated (animating buttons )
    // gsap.to(".millage-buttons--left", {
    //   opacity: item === "reset" ? 0 : item === "left" ? 1 : 0,
    //   ease: "elastic.out(1,0.75)",
    //   duration: 1,
    // });
    // gsap.to(".millage-buttons--right", {
    //   opacity: item === "reset" ? 0 : item === "right" ? 1 : 0,
    //   ease: "elastic.out(1,0.75)",
    //   duration: 1,
    // });
  }

  const percentageMap = {
    left: ["54%", "43%"],
    right: ["43%", "54%"],
    reset: ["48.5%"],
  };
</script>

<div
  class="2xl:h-[86vh] lg:h-[98vh] checked bg-[#f9f2e8] md:bg-[url('/assets/square-150.png')] lg:min-h-[850px] 2xl:min-h-[900px] md:min-h-[830px] bg-fixed flex md:block flex-col"
>
  <div class="md:max-w-screen-lg max-w-sm mx-auto lg:min-w-[1000px]">
    <div class="grid grid-cols-12 md:py-28 py-16">
      <div class="md:col-span-6 col-span-12 md:mb-0 mb-10">
        <h4 class="md:text-5xl text-4xl">Vehicles made for the planet</h4>
      </div>
      <div class="md:col-span-6 col-span-12 text-xl">
        <p>
          Whether it's taking families on new adventures or helping fleets
          electrify at scale, our vehicles all share a common goal - preserving
          the natural world for generations to come.
        </p>
      </div>
    </div>
  </div>
  <ComparisonSlider r1tImages={r1tImages} r1sImages={r1sImages} />
</div>
